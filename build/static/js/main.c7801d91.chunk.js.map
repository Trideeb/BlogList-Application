{"version":3,"sources":["reducers/notificationReducer.js","reducers/loggedReducer.js","services/blogs.js","reducers/blogReducer.js","services/users.js","reducers/userReducer.js","store.js","services/login.js","components/Notification.js","components/LoginForm.js","components/Users.js","components/Togglable.js","components/NewBlogForm.js","components/Bloglist.js","components/Blog.js","components/Navigation.js","components/Footer.js","App.js","index.js"],"names":["initialState","timeoutID","notificationAction","message","type","seconds","dispatch","a","clearTimeout","payload","setTimeout","notificationReducer","state","action","console","log","setLoggedUserAction","user","loggedReducer","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","config","headers","Authorization","post","setToken","newToken","update","id","put","remove","delete","addComment","comment","blogReducer","likedBlog","map","blog","likes","filter","commentedBlog","comments","newBlogByUserAction","blogObj","userReducer","userId","newBlog","title","author","url","blogs","blogId","rootReducer","combineReducers","loggedUser","notification","users","usersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","login","credentials","Notification","useSelector","Alert","variant","LoginForm","useState","username","setUsername","password","setPassword","useDispatch","handleLogin","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","blogService","className","Form","onSubmit","Group","controlId","Label","Control","value","onChange","target","required","Button","Users","history","useHistory","Table","striped","name","length","onClick","push","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","icon","buttonLabel","children","displayName","NewBlogForm","setNewBlog","handleChange","handleCreateNew","createdBlog","togglableRef","current","as","Row","column","sm","Col","Bloglist","newBlogFormRef","useRef","sortedBlogs","sort","b","to","Blog","setComment","useParams","find","updateBlog","blogObject","changedBlog","removeHandler","confirm","commentHandler","commentObj","content","href","rel","md","srOnly","placeholder","Navigation","padding","Navbar","collapseOnSelect","expand","bg","Container","Brand","Toggle","aria-controls","Collapse","Nav","Link","Text","removeItem","Footer","role","aria-label","App","useEffect","userService","loggedUserJSON","getItem","parse","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7801d91.chunk.js","sourcesContent":["const initialState = null\n\nconst notificationReducer = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n  case 'SHOW_NOTIFICATION':\n    return action.payload\n  case 'CLOSE_NOTIFICATION':\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport const showNotificationAction = (message) => {\n  return {\n    type: 'SHOW_NOTIFICATION',\n    payload: message\n  }\n}\n\nexport const closeNotificationAction = () => {\n  return {\n    type: 'CLOSE_NOTIFICATION'\n  }\n}\n\n//async action creator handles both show & close\nlet timeoutID = null\nexport const notificationAction = (message, type, seconds = 5) => {\n  return async dispatch => {\n    if (timeoutID) {\n      // earlier setTimeout call will be canceled\n      clearTimeout(timeoutID)\n      timeoutID = null\n    }\n    dispatch({\n      type: 'SHOW_NOTIFICATION',\n      payload: {\n        message,\n        type\n      }\n    })\n    // each setTimeout creates a unique ID\n    timeoutID = setTimeout(() =>\n      dispatch({\n        type: 'CLOSE_NOTIFICATION'\n      }), seconds * 1000)\n  }\n}\n\nexport default notificationReducer","const initialState = null\n\nconst loggedReducer = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n  case 'SET_USER':\n    return action.payload\n  case 'REMOVE_USER':\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport const setLoggedUserAction = (user) => {\n  return {\n    type: 'SET_USER',\n    payload: user\n  }\n}\n\nexport const removeLoggedUserAction = () => {\n  return {\n    type: 'REMOVE_USER'\n  }\n}\n\nexport default loggedReducer","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\n// set token to headers format\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request\n    .then(response => response.data)\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst addComment = async (id, comment) => {\n  const response = await axios.post(`${baseUrl}/${id}/comments`, comment)\n  return response.data\n}\n\nexport default { getAll, create, setToken, update, remove, addComment }","import blogService from '../services/blogs'\nimport { notificationAction } from './notificationReducer'\n\nconst initialState = []\n\nconst blogReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'INIT_BLOGS':\n    return action.payload\n  case 'NEW_BLOG':\n    return [...state, action.payload]\n  case 'LIKE_BLOG': {\n    const id = action.payload.id\n    const likedBlog = action.payload\n    return state.map(blog =>\n      blog.id !== id ? blog : { ...blog, likes: likedBlog.likes }\n    )\n  }\n  case 'REMOVE_BLOG': {\n    const id = action.payload\n    return state.filter(blog => blog.id !== id)\n  }\n  case 'COMMENT_BLOG': {\n    const id = action.payload.id\n    const commentedBlog = action.payload\n    return state.map(blog =>\n      blog.id !== id ? blog : { ...blog, comments: commentedBlog.comments }\n    )\n  }\n  default:\n    return state\n  }\n}\n\n// async action creator makes axios call\nexport const initializeBlogsAction = () => {\n  return async dispatch => {\n    try {\n      const blogs = await blogService.getAll()\n      dispatch({\n        type: 'INIT_BLOGS',\n        payload: blogs\n      })\n    }\n    catch (exception) {\n      console.log(exception)\n      dispatch(notificationAction('Sorry, connection error!', 'danger', 10))\n    }\n  }\n}\n\nexport const createBlogAction = (blogObj) => {\n  return {\n    type: 'NEW_BLOG',\n    payload: blogObj\n  }\n}\n\nexport const likeBlogAction = (blogObj) => {\n  return {\n    type: 'LIKE_BLOG',\n    payload: blogObj\n  }\n}\n\nexport const removeBlogAction = (id) => {\n  return {\n    type: 'REMOVE_BLOG',\n    payload: id\n  }\n}\n\nexport const commentBlogAction = (blogObj) => {\n  return {\n    type: 'COMMENT_BLOG',\n    payload: blogObj\n  }\n}\n\nexport default blogReducer","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nexport default { getAll }","import userService from '../services/users'\nimport { notificationAction } from './notificationReducer'\n\nconst initialState = []\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'INIT_USERS':\n    return action.payload\n  case 'NEW_BLOG_BY_USER': {\n    const userId = action.payload.user.id\n    const newBlog = {\n      title: action.payload.title,\n      author: action.payload.author,\n      url: action.payload.url,\n      id: action.payload.id\n    }\n    return state.map(user =>\n      user.id !== userId ? user : { ...user, blogs: [ ...user.blogs, newBlog ] }\n    )\n  }\n  case 'BLOG_REMOVED_BY_USER': {\n    const userId = action.payload.user.id\n    const blogId = action.payload.id\n    return state.map(user => user.id !== userId ? user :\n      { ...user, blogs: user.blogs.filter(blog => blog.id !== blogId) }\n    )\n  }\n  default:\n    return state\n  }\n}\n\n// async action creator makes axios call\nexport const initializeUsersAction = () => {\n  return async dispatch => {\n    try {\n      const users = await userService.getAll()\n      dispatch({\n        type: 'INIT_USERS',\n        payload: users\n      })\n    }\n    catch (exception) {\n      console.log(exception)\n      dispatch(notificationAction('Sorry, connection error!', 'danger', 10))\n    }\n  }\n}\n\nexport const newBlogByUserAction = (blogObj) => {\n  return {\n    type: 'NEW_BLOG_BY_USER',\n    payload: blogObj,\n  }\n}\n\nexport const blogRemovedByUserAction = (blogObj) => {\n  return {\n    type: 'BLOG_REMOVED_BY_USER',\n    payload: blogObj,\n  }\n}\n\nexport default userReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport notificationReducer from './reducers/notificationReducer'\nimport loggedReducer from './reducers/loggedReducer'\nimport blogReducer from './reducers/blogReducer'\nimport usersReducer from './reducers/userReducer'\n\nconst rootReducer = combineReducers({\n  loggedUser: loggedReducer,\n  blogs: blogReducer,\n  notification: notificationReducer,\n  users: usersReducer\n})\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from 'react-bootstrap'\n\nconst Notification = () => {\n  // Redux store: notification details or null\n  const notification = useSelector(state => state.notification)\n\n  if (!notification) {\n    return null\n  }\n\n  return (\n    <Alert variant={notification.type}>\n      {notification.message}\n    </Alert>\n  )\n\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport blogService from '../services/blogs'\nimport { useDispatch } from 'react-redux'\nimport { setLoggedUserAction } from '../reducers/loggedReducer'\nimport loginService from '../services/login'\nimport { notificationAction } from '../reducers/notificationReducer'\nimport { Form, Button } from 'react-bootstrap'\nimport Notification from './Notification'\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    setUsername('')\n    setPassword('')\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      dispatch(setLoggedUserAction(user))\n      // store user in localStorage\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      dispatch(notificationAction('Login success', 'success'))\n    } catch (error) {\n      console.log(error.response.data)\n      dispatch(notificationAction('Wrong credentials', 'danger'))\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Log in to application</h2>\n      <Notification />\n      <Form id=\"login\" onSubmit={handleLogin}>\n        <Form.Group controlId=\"username\">\n          <Form.Label>username:</Form.Label>\n          <Form.Control type=\"text\"\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>password:</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            required\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" id=\"login-button\">login</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Table, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nconst Users = () => {\n\n  // Redux store: users\n  const users = useSelector(state => state.users)\n\n  const history = useHistory()\n  const backHandler = () => {\n    history.push('/')\n  }\n\n  return (\n    <div className=\"users mb-4\">\n      <h2>Users</h2>\n      <Table striped className=\"user-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Blogs created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user =>\n            <tr key={user.id}>\n              <td id=\"user-name\"> {user.name} </td>\n              <td id=\"user-blogs\">{user.blogs.length}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <Button id=\"back-button\" variant=\"secondary\" onClick={backHandler}>Back</Button>\n    </div>\n  )\n}\n\nexport default Users","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = React.forwardRef((props, ref)  => {\n  const [visible, setVisible] = useState(false)\n\n  // empty display value '' does not affect display at all\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  // this fn will be accessed from outside with ref\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  // this hook makes toggleVisibility availabe in App.js via ref\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button onClick={toggleVisibility}><i className={props.icon}></i> {props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button className=\"ml-1\" variant=\"secondary\" onClick={toggleVisibility}><i className=\"bi bi-x-circle\"></i> Cancel</Button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport blogService from '../services/blogs'\nimport { createBlogAction } from '../reducers/blogReducer'\nimport { newBlogByUserAction } from '../reducers/userReducer'\nimport { notificationAction } from '../reducers/notificationReducer'\nimport { Form, Row, Button, Col } from 'react-bootstrap'\n\nconst NewBlogForm = (props) => {\n  const [newBlog, setNewBlog] = useState({\n    title: '',\n    author: '',\n    url: ''\n  })\n\n  const handleChange = (event) => {\n    setNewBlog({ ...newBlog, [event.target.id]: event.target.value })\n  }\n\n  const dispatch = useDispatch()\n\n  const handleCreateNew = async (event) => {\n    console.log('handleSubmit')\n    event.preventDefault()\n    setNewBlog({\n      title: '',\n      author: '',\n      url: ''\n    })\n    try {\n      const createdBlog = await blogService.create(newBlog)\n      console.log('blog created:', createdBlog)\n      dispatch(createBlogAction(createdBlog))\n      dispatch(newBlogByUserAction(createdBlog))\n      // access Togglable function via ref to close the form\n      props.togglableRef.current.toggleVisibility()\n      dispatch(notificationAction(`A new blog ${createdBlog.title} by ${createdBlog.author} added`, 'success'))\n    }\n    catch (error) {\n      console.log('Create new blog error:', error)\n      dispatch(notificationAction('Sorry, adding the blog failed.', 'danger'))\n    }\n  }\n\n  return (\n    <div>\n      <h3>Create new</h3>\n      <div className=\"createBlogForm\">\n        <Form onSubmit={handleCreateNew}>\n          <Form.Group as={Row} controlId=\"title\">\n            <Form.Label column sm=\"2\">title:</Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"text\"\n                value={newBlog.title}\n                onChange={handleChange}\n                required\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"author\">\n            <Form.Label column sm=\"2\">author:</Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"text\"\n                value={newBlog.author}\n                onChange={handleChange}\n                required\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"url\">\n            <Form.Label column sm=\"2\">url:</Form.Label>\n            <Col sm=\"10\">\n              <Form.Control\n                type=\"text\"\n                value={newBlog.url}\n                onChange={handleChange}\n                required\n              />\n            </Col>\n          </Form.Group>\n          <Button className=\"float-left\" type=\"submit\" id=\"create-button\">\n            <i className=\"bi bi-save2\"></i>\n            {' '}Create\n          </Button>\n        </Form>\n\n      </div>\n\n    </div>\n  )}\n\nexport default NewBlogForm","import React, { useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Notification from './Notification'\nimport Togglable from './Togglable'\nimport NewBlogForm from './NewBlogForm'\nimport { Table } from 'react-bootstrap'\n\nconst Bloglist = () => {\n\n  // Redux store: blogs\n  const blogs = useSelector(state => state.blogs)\n\n  // used for linking with Togglable\n  const newBlogFormRef = useRef()\n\n  // sort blogs by amount of likes\n  const sortedBlogs = blogs.sort((a, b) => b.likes - a.likes)\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <Notification />\n      <Togglable icon='bi bi-plus-circle' buttonLabel='Add new' ref={newBlogFormRef}>\n        {/* NewBlogForm becomes the children of Togglable (show/hide) */}\n        <NewBlogForm togglableRef={newBlogFormRef} />\n      </Togglable>\n\n      <Table striped className=\"blog-table\">\n        <tbody>\n          {sortedBlogs.map(blog =>\n            <tr key={blog.id}>\n              <td>\n                <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n              </td>\n              <td>\n                {blog.author}\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Bloglist","import React, { useState } from 'react'\nimport blogService from '../services/blogs'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { likeBlogAction, removeBlogAction, commentBlogAction } from '../reducers/blogReducer'\nimport { notificationAction } from '../reducers/notificationReducer'\nimport { useParams, useHistory } from 'react-router-dom'\nimport Notification from './Notification'\nimport { Table, Button, Form, Row, Col } from 'react-bootstrap'\nimport { blogRemovedByUserAction } from '../reducers/userReducer'\n\n\nconst Blog = () => {\n\n  // comment form state\n  const [comment, setComment] = useState('')\n\n  const handleChange = (event) => {\n    setComment(event.target.value)\n  }\n\n  // Redux store: user saved after login success\n  const user = useSelector(state => state.loggedUser)\n  // Redux store: blogs\n  const blogs = useSelector(state => state.blogs)\n\n  const dispatch = useDispatch()\n\n  const blogId = useParams().id\n  const blog = blogs.find(blog => blog.id === blogId)\n  //console.log('Render blog', blog)\n\n  const updateBlog = async (blogObject) => {\n    const changedBlog = {\n      title: blogObject.title,\n      author: blogObject.author,\n      url: blogObject.url,\n      likes: blogObject.likes + 1,\n      user: blogObject.user.id\n    }\n    console.log('original', blogObject)\n    console.log('changed', changedBlog)\n    try {\n      // likes have been increased but returned user has only id\n      const likedBlog = await blogService.update(blogObject.id, changedBlog)\n      dispatch(likeBlogAction(likedBlog))\n      dispatch(notificationAction(`Likes of the blog ${likedBlog.title} updated`, 'success'))\n    }\n    catch (error) {\n      console.log('Update blog error:', error)\n      dispatch(notificationAction('Sorry, adding likes failed.', 'danger'))\n    }\n  }\n\n  const removeHandler = async (blog) => {\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\n      // when user chooses OK\n      try {\n        await blogService.remove(blog.id)\n        dispatch(removeBlogAction(blog.id))\n        dispatch(blogRemovedByUserAction(blog))\n        dispatch(notificationAction('Blog was removed', 'success'))\n        history.push('/')\n      }\n      catch (error) {\n        console.log('Delete blog error:', error)\n        dispatch(notificationAction('Sorry, remove failed.', 'danger'))\n      }\n    }\n  }\n\n  const commentHandler = async (event) => {\n    event.preventDefault()\n    setComment('')\n    // convert into obj for axios post\n    const commentObj = { content: comment }\n    try {\n      const commentedBlog = await blogService.addComment(blogId, commentObj)\n      console.log(commentedBlog)\n      dispatch(commentBlogAction(commentedBlog))\n      dispatch(notificationAction('Comment added', 'success'))\n    }\n    catch (error) {\n      console.log('Comment blog error:', error)\n      dispatch(notificationAction('Sorry, adding comments failed.', 'danger'))\n    }\n  }\n\n  const history = useHistory()\n  const backHandler = () => {\n    history.push('/')\n  }\n\n  if (!blog) {\n    return null\n  }\n\n  return (\n    <div className=\"blog mb-4\">\n      <h2>{blog.title} by {blog.author}</h2>\n      <Notification />\n      <Table className=\"blog-table\">\n        <tbody>\n          <tr>\n            <th>Title:</th>\n            <td>{blog.title}</td>\n            <td></td>\n          </tr>\n          <tr>\n            <th>Author:</th>\n            <td>{blog.author}</td>\n            <td></td>\n          </tr>\n          <tr>\n            <th>Url:</th>\n            <td><a href={blog.url} target=\"_blank\" rel=\"noreferrer\">{blog.url}</a></td>\n            <td></td>\n          </tr>\n          <tr>\n            <th>Likes:</th>\n            <td id=\"likes\">{blog.likes}</td>\n            <td><Button variant=\"outline-success\" id=\"like-button\" onClick={() => updateBlog(blog)}><i className=\"bi bi-heart-fill\"></i> Like</Button></td>\n          </tr>\n          <tr>\n            <th>Added by:</th>\n            <td>\n              {blog.user.name}\n            </td>\n            <td>{blog.user.username === user.username ?\n              (<Button variant=\"outline-primary\" id=\"remove-button\" onClick={() => removeHandler(blog)}><i className=\"bi bi-file-excel-fill\"></i> Remove</Button>)\n              : null}</td>\n          </tr>\n        </tbody>\n      </Table>\n      <h3>Comments</h3>\n      <Form id=\"comment-form\" onSubmit={commentHandler}>\n        <Form.Group as={Row} controlId=\"comment\">\n          <Col md=\"9\" className=\"mb-2\">\n            <Form.Label srOnly={true}>Comment</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={comment}\n              onChange={handleChange}\n              placeholder=\"Leave your comment\"\n              required />\n          </Col>\n          <Col md=\"auto\">\n            <Button\n              variant=\"outline-primary\"\n              type=\"submit\"\n              id=\"comment-button\">\n              <i className=\"bi bi-chat-square-text-fill\"></i>\n            Add comment\n            </Button>\n          </Col>\n        </Form.Group>\n      </Form>\n      {blog.comments.map((comment) =>\n        <li key={comment.id}>{comment.content}</li>\n      )}\n      <div className=\"mt-3\">\n        <Button id=\"back-button\" variant=\"secondary\" onClick={backHandler}>Back</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { removeLoggedUserAction } from '../reducers/loggedReducer'\nimport { Link } from 'react-router-dom'\nimport { Navbar, Nav, Button, Container } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nconst Navigation = () => {\n  const dispatch = useDispatch()\n\n  // Redux store: user saved after login success\n  const loggedUser = useSelector(state => state.loggedUser)\n\n  const history = useHistory()\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogAppUser')\n    history.push('/')\n    dispatch(removeLoggedUserAction())\n  }\n\n  const padding = {\n    padding: 5\n  }\n\n  if (loggedUser === null) {\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand><i className=\"bi bi-bookmark-star\"></i> Great Blogs App</Navbar.Brand>\n        </Container>\n      </Navbar>\n    )\n  }\n\n  return (\n    <Navbar className=\"p-lg-4\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand><i className=\"bi bi-bookmark-star\"></i> Great Blogs App</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as=\"span\">\n              <Link style={padding} to=\"/\">blogs</Link>\n            </Nav.Link>\n            <Nav.Link as=\"span\">\n              <Link style={padding} to=\"/users\">users</Link>\n            </Nav.Link>\n          </Nav>\n          <Navbar.Text className=\"mr-4\">{loggedUser.name} logged in</Navbar.Text>\n          <div className=\"d-sm-inline-flex\">\n            <Button\n              id=\"logout-button\"\n              className=\"btn-block\"\n              variant=\"light\"\n              onClick={handleLogout}\n            >logout <i className=\"bi bi-box-arrow-right\"></i>\n            </Button>\n          </div>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default Navigation\n\n\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"container\">\n        <span className=\"text-muted\">\n        Blog app, Author <a id=\"github\" href=\"https://github.com/Trideeb\" target=\"_blank\" rel=\"noreferrer\">\n            <i className=\"bi bi-github\" role=\"img\" aria-label=\"GitHub logo\"></i> 3deeb</a> 2023\n        </span>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer","import React, { useEffect } from 'react'\nimport LoginForm from './components/LoginForm'\nimport Users from './components/Users'\nimport blogService from './services/blogs'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setLoggedUserAction } from './reducers/loggedReducer'\nimport { initializeBlogsAction } from './reducers/blogReducer'\nimport { initializeUsersAction } from './reducers/userReducer'\nimport {\n  BrowserRouter as Router,\n  Switch, Route\n} from 'react-router-dom'\nimport Bloglist from './components/Bloglist'\nimport Blog from './components/Blog'\nimport Navigation from './components/Navigation'\nimport Footer from './components/Footer'\nimport { Container } from 'react-bootstrap'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  // Redux store: user saved after login success\n  const loggedUser = useSelector(state => state.loggedUser)\n\n  // runs once to initialize blogs\n  useEffect(() => {\n    dispatch(initializeBlogsAction())\n  }, [dispatch])\n\n  // runs once to initialize users\n  useEffect(() => {\n    dispatch(initializeUsersAction())\n  }, [dispatch])\n\n  // check if user is logged in after page refresh\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setLoggedUserAction(user))\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <Container>\n          {loggedUser === null? <LoginForm />\n            : (\n              <Switch>\n                <Route path=\"/blogs/:id\">\n                  <Blog />\n                </Route>\n                <Route path=\"/users\">\n                  <Users />\n                </Route>\n                <Route path=\"/\">\n                  <Bloglist />\n                </Route>\n              </Switch>\n            )\n          }\n        </Container>\n      </Router>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}